services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: supoclip-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: supoclip-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/app/src
      - uploads:/app/uploads
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://supoclip:supoclip_password@postgres:5432/supoclip
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and job queues (useful for video processing)
  redis:
    image: redis:7-alpine
    container_name: supoclip-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database for storing video metadata, user data, etc.
  postgres:
    image: postgres:15-alpine
    container_name: supoclip-postgres
    environment:
      POSTGRES_DB: supoclip
      POSTGRES_USER: supoclip
      POSTGRES_PASSWORD: supoclip_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supoclip -d supoclip"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  uploads:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  default:
    name: supoclip-network
